//-----------------------------------------------------------------------------
//
//	CommandClassCommands.def
//
//	A List of All CommandClass Commands that are sent to devices
//
//	Copyright (c) 2020 Justin Hammond <justin@dynam.ac>
//
//	SOFTWARE NOTICE AND LICENSE
//
//	This file is part of OpenZWave.
//
//	OpenZWave is free software: you can redistribute it and/or modify
//	it under the terms of the GNU Lesser General Public License as published
//	by the Free Software Foundation, either version 3 of the License,
//	or (at your option) any later version.
//
//	OpenZWave is distributed in the hope that it will be useful,
//	but WITHOUT ANY WARRANTY; without even the implied warranty of
//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//	GNU Lesser General Public License for more details.
//
//	You should have received a copy of the GNU Lesser General Public License
//	along with OpenZWave.  If not, see <http://www.gnu.org/licenses/>.
//
//-----------------------------------------------------------------------------



/* This file is run through the preprocessor and output to CommandClassCommands.h to avoid problems
 * with MSVC not supporting enough arguments with Macro's.
 * If you are adding a CommandClass or new Command Class Packets, you should add its index ENUM to 
 * CommandClassCommands_Defines.def and the run 'make updateIndexDefines' to regenerate the the CommandClassCommands.h file
 * Obviously the regeneration will not work on MSVC, so you need clang or gnugcc to do the preprocessing
 * how to do that is left to the reader to figure out on Windows. On Unix and Mac, as long as the compiler 
 * supports more than 512 Macro arguements, all should be good. 
 *
 * This also has the nice side benefit in that we only have to do the pre-processing once, and the output is 
 * included into all the files that include CommandClassCommands.h without having to process it again
 */



#ifndef _CommandClassCommands_H
#define _CommandClassCommands_H

#include "EnumStruct.h"

    ENUM(ZW_Message_Type,
        Request = 0x00,
        Response = 0x01
    )
    ENUM(ZW_Msg_Func, 
        Send_Data = 0x01
    )
    ENUM(ZW_Callback_Func,
        None = 0x00,
        Command_Handler = 0x01
    )
    ENUM(ZW_CommandClasses,
        Alarm = 0x71,
        Antitheft = 0x5D,
        Antitheft_Unlock = 0x7E,
        Application_Capability = 0x57,
        Application_Status = 0x22,
        Association = 0x85,
        Association_Command_Configuration = 0x9B,
        Association_Group_Info = 0x59,
        Authentication = 0xA1,
        Authentication_Media_Write = 0xA2,
        Barrier_Operator = 0x66,
        Basic = 0x20,
        Basic_Tariff_Info = 0x36,
        Basic_Window_Covering = 0x50,
        Battery = 0x80,
        Central_Scene = 0x5B,
        Climate_Control_Schedule = 0x46,
        Clock = 0x81,
        Configuration = 0x70,
        Controller_Replication = 0x21,
        CRC16_Encap = 0x56,
        DCP_Config = 0x3A,
        DCP_Monitor = 0x3B,
        Device_Reset_Locally = 0x5A,
        Door_Lock = 0x62,
        Door_Lock_Logging = 0x4C,
        Energy_Production = 0x90,
        Entry_Control = 0x6F,
        Firmware_Update_MD = 0x7A,
        Generic_Schedule = 0xA3,
        Geographic_Location = 0x8C,
        Grouping_Name = 0x7B,
        Hail = 0x82,
        HRV_Control = 0x38,
        HRV_Status = 0x37,
        Humidity_Control_Mode = 0x6D,
        Humidity_Control_Operating_State = 0x6E,
        Humidity_Control_Setpoint = 0x64,
        Inclusion_Controller = 0x74,
        Indicator = 0x87,
        IP_Association = 0x5C,
        IP_Configuration = 0x9A,
        IR_Repeater = 0xA0,
        Irrigation = 0x6B,
        Language = 0x89,
        Lock = 0x76,
        Mailbox = 0x69,
        Manufacturer_Proprietary = 0x91,
        Manufacturer_Specific = 0x72,
        Mark = 0xEF,
        Meter = 0x32,
        Meter_Pulse = 0x35,
        Meter_Tbl_Config = 0x3C,
        Meter_Tbl_Monitor = 0x3D,
        Meter_Tbl_Push = 0x3E,
        MTP_Window_Covering = 0x51,
        MultiChannel = 0x60,
        MultiChannel_Association = 0x8E,
        MultiCommand = 0x8F,
        Network_Management_Basic = 0x4D,
        Network_Management_Inclusion = 0x34,
        Network_Management_Installation_Maintenance = 0x67,
        Network_Management_Primary = 0x54,
        Network_Management_Proxy = 0x52,
        No_Operation = 0x00,
        Node_Naming = 0x77,
        Node_Provisioning = 0x78,
        Notification = 0x71,
        PowerLevel = 0x73,
        Prepayment = 0x3F,
        Prepayment_Encapsulation = 0x41,
        Proprietary = 0x88,
        Protection = 0x75,
        Rate_Tbl_Config = 0x48,
        Rate_Tbl_Monitor = 0x49,
        Remote_Association = 0x7D,
        Remote_Association_Activate = 0x7C,
        Scene_Activation = 0x2B,
        Scene_Actuator_Conf = 0x2C,
        Scene_Controller_Conf = 0x2D,
        Schedule = 0x53,
        Schedule_Entry_Lock = 0x4E,
        Screen_Attributes = 0x93,
        Screen_MD = 0x92,
        Security_S0 = 0x98,
        Security_S2 = 0x9F,
        Sensor_Alarm = 0x9C,
        Sensor_Binary = 0x30,
        Sensor_Configuration = 0x9E,
        Sensor_Multilevel = 0x31,
        Silence_Alarm = 0x9D,
        Simple_AV_Control = 0x94,
        Sound_Switch = 0x79,
        Supervision = 0x6C,
        Switch_All = 0x27,
        Switch_Binary = 0x25,
        Switch_Color = 0x33,
        Switch_Multilevel = 0x26,
        Switch_Toggle_Binary = 0x28,
        Switch_Toggle_Multilevel = 0x29,
        Tariff_Config = 0x4A,
        Tariff_Tbl_Monitor = 0x4B,
        Thermostat_Fan_Mode = 0x44,
        Thermostat_Fan_State = 0x45,
        Thermostat_Mode = 0x40,
        Thermostat_Operating_State = 0x42,
        Thermostat_Setback = 0x47,
        Thermostat_Setpoint = 0x43,
        Time = 0x8A,
        Time_Parameters = 0x8B,
        Transport_Service = 0x55,
        User_Code = 0x63,
        Version = 0x86,
        Wake_Up = 0x84,
        Window_Covering = 0x6A,
        ZIP = 0x23,
        ZIP_6LoWPAN = 0x4F,
        ZIP_Gateway = 0x5F,
        ZIP_Naming = 0x68,
        ZIP_ND = 0x58,
        ZIP_Portal = 0x61,
        ZWavePlus_Info = 0x5E
    )

    ENUM(Alarm_Cmd,
        Get = 0x04,
        Report = 0x05,
        Set = 0x06,
        // Version 2
        Get_Supported = 0x07,
        Report_Supported = 0x08,
        // Version 3
        Get_Supported_Event = 0x01,
        Report_Supported_Event = 0x02
    )

    ENUM(NoOperation_Cmd,
        Nop = 0x00
    )

#endif